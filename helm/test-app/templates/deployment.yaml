apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        giantswarm.io/service-type: "managed"
    spec:
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
        - '--port={{ .Values.port }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
      serviceAccountName: {{ .Values.name }}
      hostNetwork: true
